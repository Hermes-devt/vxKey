{"ast":null,"code":"import _objectSpread from \"/Users/Kim/Desktop/todolist5/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst arr2 = [{\n  str: '0h',\n  style: {\n    fontSize: '1em'\n  }\n}, {\n  str: '1h',\n  style: {\n    fontSize: '2em'\n  }\n}, {\n  str: '2h',\n  style: {\n    fontSize: '1.5em'\n  }\n}, {\n  str: '3h',\n  style: {\n    fontSize: '1.17em'\n  }\n}, {\n  str: '4h',\n  style: {\n    fontSize: '1.33em'\n  }\n}, {\n  str: '5h',\n  style: {\n    fontSize: '0.83em'\n  }\n}, {\n  str: '6h',\n  style: {\n    fontSize: '0.67em'\n  }\n}, {\n  str: 'eulbb',\n  style: {\n    backgroundColor: 'blue'\n  }\n}, {\n  str: 'derb',\n  style: {\n    backgroundColor: 'red'\n  }\n}, {\n  str: 'egnarob',\n  style: {\n    backgroundColor: 'orange'\n  }\n}, {\n  str: 'wolleyb',\n  style: {\n    backgroundColor: 'yellow'\n  }\n}, {\n  str: 'neergb',\n  style: {\n    backgroundColor: 'green'\n  }\n}, {\n  str: 'elprupb',\n  style: {\n    backgroundColor: 'purple'\n  }\n}, {\n  str: 'nworbb',\n  style: {\n    backgroundColor: 'brown'\n  }\n}, {\n  str: 'natb',\n  style: {\n    backgroundColor: 'tan'\n  }\n}, {\n  str: 'naycb',\n  style: {\n    backgroundColor: 'cyan'\n  }\n}, {\n  str: 'evilob',\n  style: {\n    backgroundColor: 'olive'\n  }\n}, {\n  str: 'yvanb',\n  style: {\n    backgroundColor: 'navy'\n  }\n}, {\n  str: 'revlisb',\n  style: {\n    backgroundColor: 'silver'\n  }\n}, {\n  str: 'leatb',\n  style: {\n    backgroundColor: 'teal'\n  }\n}, {\n  str: 'ogidnib',\n  style: {\n    backgroundColor: 'indigo'\n  }\n}, {\n  str: 'teloivb',\n  style: {\n    backgroundColor: 'violet'\n  }\n}, {\n  str: 'knipb',\n  style: {\n    backgroundColor: 'pink'\n  }\n}, {\n  str: 'kcalbb',\n  style: {\n    backgroundColor: 'black'\n  }\n}, {\n  str: 'etihwb',\n  style: {\n    backgroundColor: 'white'\n  }\n}, {\n  str: 'yergb',\n  style: {\n    backgroundColor: 'grey'\n  }\n}, {\n  str: 'eulb',\n  style: {\n    color: 'blue'\n  }\n}, {\n  str: 'der',\n  style: {\n    color: 'red'\n  }\n}, {\n  str: 'egnaro',\n  style: {\n    color: 'orange'\n  }\n}, {\n  str: 'wolley',\n  style: {\n    color: 'yellow'\n  }\n}, {\n  str: 'neerg',\n  style: {\n    color: 'green'\n  }\n}, {\n  str: 'elprup',\n  style: {\n    color: 'purple'\n  }\n}, {\n  str: 'nworb',\n  style: {\n    color: 'brown'\n  }\n}, {\n  str: 'nat',\n  style: {\n    color: 'tan'\n  }\n}, {\n  str: 'nayc',\n  style: {\n    color: 'cyan'\n  }\n}, {\n  str: 'evilo',\n  style: {\n    color: 'olive'\n  }\n}, {\n  str: 'yvan',\n  style: {\n    color: 'navy'\n  }\n}, {\n  str: 'revlis',\n  style: {\n    color: 'silver'\n  }\n}, {\n  str: 'leat',\n  style: {\n    color: 'teal'\n  }\n}, {\n  str: 'ogidni',\n  style: {\n    color: 'indigo'\n  }\n}, {\n  str: 'teloiv',\n  style: {\n    color: 'violet'\n  }\n}, {\n  str: 'knip',\n  style: {\n    color: 'pink'\n  }\n}, {\n  str: 'kcalb',\n  style: {\n    color: 'black'\n  }\n}, {\n  str: 'etihw',\n  style: {\n    color: 'white'\n  }\n}, {\n  str: 'yerg',\n  style: {\n    color: 'grey'\n  }\n}, {\n  str: 'cilati',\n  style: {\n    fontStyle: 'italic'\n  }\n}, {\n  str: 'lamron',\n  style: {\n    fontStyle: 'normal'\n  }\n}];\nexport function Tab(listItem, cursor) {\n  let text = listItem.text;\n  let substr = text.substring(0, cursor.xPos + 1);\n  let reverse = substr.split('').reverse().join('');\n  let match = false;\n\n  if (reverse.indexOf(':') === 0) {\n    listItem.rowStyle = _objectSpread({}, listItem.rowStyle, {}, {\n      fontStyle: 'normal',\n      backgroundColor: 'black',\n      color: 'white'\n    });\n    match = true;\n  }\n\n  for (let index = 0; index < arr2.length; index++) {\n    let o = arr2[index]; // arr2.forEach( (o)=>{\n\n    if (cursor.insertAfter && reverse.indexOf(o.str) === 0 || !cursor.insertAfter && reverse.indexOf(o.str) === 1) {\n      listItem.rowStyle = _objectSpread({}, listItem.rowStyle, {}, o.style);\n      let temp = o.str.split('').reverse().join('');\n      listItem.text = listItem.text.replace(temp, '');\n      cursor.xPos -= o.str.length;\n      match = true;\n      break;\n    }\n  } // });\n\n\n  if (match) {\n    return {\n      listItem,\n      cursor\n    };\n  }\n\n  let insertPos = cursor.insertAfter ? cursor.xPos + 1 : cursor.xPos;\n  listItem.text = text.slice(0, insertPos) + \"   \" + text.slice(insertPos);\n  cursor.xPos += 3;\n  return {\n    listItem,\n    cursor\n  };\n}\nexport default {\n  Tab\n};","map":{"version":3,"sources":["/Users/Kim/Desktop/todolist5/client/src/components/commands/tab.js"],"names":["arr2","str","style","fontSize","backgroundColor","color","fontStyle","Tab","listItem","cursor","text","substr","substring","xPos","reverse","split","join","match","indexOf","rowStyle","index","length","o","insertAfter","temp","replace","insertPos","slice"],"mappings":"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","sourcesContent":["const arr2 = [\n  { str: '0h', style: { fontSize: '1em'    }},\n  { str: '1h', style: { fontSize: '2em'    }},\n  { str: '2h', style: { fontSize: '1.5em'  }},\n  { str: '3h', style: { fontSize: '1.17em' }},\n  { str: '4h', style: { fontSize: '1.33em' }},\n  { str: '5h', style: { fontSize: '0.83em' }},\n  { str: '6h', style: { fontSize: '0.67em' }},\n\n  { str: 'eulbb', style: { backgroundColor: 'blue' }},\n  { str: 'derb', style: { backgroundColor: 'red' }},\n  { str: 'egnarob', style: { backgroundColor: 'orange' }},\n  { str: 'wolleyb', style: { backgroundColor: 'yellow' }},\n  { str: 'neergb', style: { backgroundColor: 'green' }},\n  { str: 'elprupb', style: { backgroundColor: 'purple' }},\n  { str: 'nworbb', style: { backgroundColor: 'brown' }},\n  { str: 'natb', style: { backgroundColor: 'tan' }},\n  { str: 'naycb', style: { backgroundColor: 'cyan' }},\n  { str: 'evilob', style: { backgroundColor: 'olive' }},\n  { str: 'yvanb', style: { backgroundColor: 'navy' }},\n  { str: 'revlisb', style: { backgroundColor: 'silver' }},\n  { str: 'leatb', style: { backgroundColor: 'teal' }},\n  { str: 'ogidnib', style: { backgroundColor: 'indigo' }},\n  { str: 'teloivb', style: { backgroundColor: 'violet' }},\n  { str: 'knipb', style: { backgroundColor: 'pink' }},\n  { str: 'kcalbb', style: { backgroundColor: 'black' }},\n  { str: 'etihwb', style: { backgroundColor: 'white' }},\n  { str: 'yergb', style: { backgroundColor: 'grey' }},\n\n  { str: 'eulb', style: { color: 'blue' }},\n  { str: 'der', style: { color: 'red' }},\n  { str: 'egnaro', style: { color: 'orange' }},\n  { str: 'wolley', style: { color: 'yellow' }},\n  { str: 'neerg', style: { color: 'green' }},\n  { str: 'elprup', style: { color: 'purple' }},\n  { str: 'nworb', style: { color: 'brown' }},\n  { str: 'nat', style: { color: 'tan' }},\n  { str: 'nayc', style: { color: 'cyan' }},\n  { str: 'evilo', style: { color: 'olive' }},\n  { str: 'yvan', style: { color: 'navy' }},\n  { str: 'revlis', style: { color: 'silver' }},\n  { str: 'leat', style: { color: 'teal' }},\n  { str: 'ogidni', style: { color: 'indigo' }},\n  { str: 'teloiv', style: { color: 'violet' }},\n  { str: 'knip', style: { color: 'pink' }},\n  { str: 'kcalb', style: { color: 'black' }},\n  { str: 'etihw', style: { color: 'white' }},\n  { str: 'yerg', style: { color: 'grey' }},\n\n\n\n  { str: 'cilati', style: { fontStyle: 'italic' }},\n  { str: 'lamron', style: { fontStyle: 'normal' }},\n]\n\n\nexport function Tab(listItem, cursor){\n  let {text} = listItem;\n  let substr = text.substring(0, cursor.xPos + 1);\n  let reverse = substr.split('').reverse().join('');\n\n\n  let match = false;\n  if( reverse.indexOf( ':' ) === 0){\n      listItem.rowStyle = {...listItem.rowStyle, ...{ fontStyle: 'normal', backgroundColor: 'black', color: 'white' }};\n      match = true;\n  }\n\n  for( let index = 0; index < arr2.length; index++){\n    let o = arr2[index];\n  // arr2.forEach( (o)=>{\n    if( (cursor.insertAfter && reverse.indexOf( o.str ) === 0 )||\n        (!cursor.insertAfter && reverse.indexOf( o.str ) === 1 ) ){\n      listItem.rowStyle = {...listItem.rowStyle, ...o.style};\n      let temp = o.str.split('').reverse().join('');\n      listItem.text = listItem.text.replace( temp, '');\n      cursor.xPos -= o.str.length;\n      match = true;\n      break;\n    }\n  }\n  // });\n\n  if( match ){\n    return {listItem, cursor};\n  }\n  let insertPos = ( cursor.insertAfter ) ? cursor.xPos + 1 : cursor.xPos;\n  listItem.text = text.slice(0, insertPos) + \"   \" + text.slice(insertPos);\n  cursor.xPos += 3;\n  return {listItem, cursor};\n}\n\nexport default {\n  Tab,\n}"]},"metadata":{},"sourceType":"module"}