{"ast":null,"code":"var _jsxFileName = \"/Users/Kim/Desktop/todolist5/client/src/components/windows/popups/hotkeys.jsx\";\nimport React, { Component } from 'react';\n\nclass Hotkeys extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: true\n    };\n  }\n\n  // componentDidMount = ()=>{ }\n  render() {\n    const cols = obj => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style.leftColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, obj.col1), React.createElement(\"div\", {\n        style: style.rightColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, obj.col2), React.createElement(\"div\", {\n        style: {\n          height: '1px',\n          display: 'inline-block',\n          width: '100%',\n          backgroundColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    };\n\n    console.log('props in', this.props.display);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.display && React.createElement(\"div\", {\n      style: style.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, [{\n      col1: 'caw',\n      col2: 'Replace the current word'\n    }, {\n      col1: 'dw',\n      col2: 'Delete current word'\n    }, {\n      col1: 'dd',\n      col2: 'Delete whole line'\n    }, {\n      col1: 'de',\n      col2: 'Delete to the end of the word'\n    }, {\n      col1: 'dE',\n      col2: 'delete to end of the line'\n    }, {\n      col1: 'db',\n      col2: 'Delete to the beginning of the word'\n    }, {\n      col1: 'cc',\n      col2: 'Copy line'\n    }, {\n      col1: 'w',\n      col2: 'Go to the beginning of the next word'\n    }, {\n      col1: 'E',\n      col2: 'Go to the end of the previous word'\n    }, {\n      col1: 'e',\n      col2: 'Go to the end of the current word'\n    }, {\n      col1: 'P',\n      col2: 'Refresh the page'\n    }, {\n      col1: 'arrowup',\n      col2: 'Go up DOESENT WORK'\n    }, {\n      col1: 'arrowdown',\n      col2: 'Scroll down'\n    }, {\n      col1: 'k',\n      col2: 'Go up one line'\n    }, {\n      col1: 'j',\n      col2: 'Go down one line'\n    }, {\n      col1: 'h',\n      col2: 'Go one character to the left'\n    }, {\n      col1: 'l',\n      col2: 'Go one line down'\n    }, {\n      col1: 'n',\n      col2: 'Delete to the beginning of the word'\n    }, {\n      col1: 'm',\n      col2: 'Delete to the beginning of the word'\n    }, {\n      col1: 'c',\n      col2: \"isnt a command just let you use multiple character str\"\n    }, {\n      col1: 'd',\n      col2: 'same here'\n    }, {\n      col1: '9',\n      col2: 'Go to the end of the line'\n    }, {\n      col1: 'X',\n      col2: 'Delete the whole line'\n    }, {\n      col1: 'p',\n      col2: 'paste line copy'\n    }, {\n      col1: 'x',\n      col2: 'Replace current character'\n    }, {\n      col1: '0',\n      col2: 'Go to the beginning of the line'\n    }, {\n      col1: '>',\n      col2: 'Shift line x pixels to the right'\n    }, {\n      col1: '<',\n      col2: 'Shift line x pixels to the left'\n    }, {\n      col1: 'O',\n      col2: 'Create a line above the current line'\n    }, {\n      col1: 'o',\n      col2: 'Create a line below the current line'\n    }, {\n      col1: 't',\n      col2: 'Open the tag window'\n    }, {\n      col1: 'Enter',\n      col2: 'Create a new line below the current line'\n    }, {\n      col1: 'Ëš',\n      col2: 'Shift line upwards'\n    }, {\n      col1: 'ArrowDown+alt',\n      col2: 'Shift the current line with the line below'\n    }, {\n      col1: 'ArrowUp+alt',\n      col2: 'Shift the current line one line upwards'\n    }].map(obj => cols(obj)), React.createElement(\"div\", {\n      style: style.close,\n      onClick: () => {\n        // const display = false; this.setState({display}); \n        this.props.onClose();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\nconst style = {\n  close: {\n    display: 'block',\n    cursor: 'pointer',\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 17\n  },\n  leftColumn: {\n    display: 'inline-block',\n    width: 100,\n    border: 'none',\n    textAlign: 'center',\n    color: 'black',\n    borderLeft: '1px solid silver',\n    backgroundColor: 'white',\n    opacity: 1,\n    wordWrap: 'wrap',\n    overflow: 'hidden'\n  },\n  rightColumn: {\n    display: 'inline-block',\n    width: 200,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 15,\n    paddingLeft: 20\n  },\n  container: {\n    position: 'absolute',\n    display: 'block',\n    width: 400,\n    height: '80vh',\n    overflowY: 'scroll',\n    backgroundColor: 'white',\n    top: 60,\n    left: 0\n  }\n};\nexport default Hotkeys;","map":{"version":3,"sources":["/Users/Kim/Desktop/todolist5/client/src/components/windows/popups/hotkeys.jsx"],"names":["React","Component","Hotkeys","state","display","render","cols","obj","style","leftColumn","col1","rightColumn","col2","height","width","backgroundColor","console","log","props","container","map","close","onClose","cursor","color","textAlign","fontSize","border","borderLeft","opacity","wordWrap","overflow","paddingLeft","position","overflowY","top","left"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Hotkeys extends Component {\n  state = { display: true, }\n\n\n  // componentDidMount = ()=>{ }\n  \n  render() { \n    const cols = (obj)=>{\n      return(\n        <div>\n          <div style={style.leftColumn}>{obj.col1}</div>\n          <div style={style.rightColumn}>{obj.col2}</div>\n          <div style={{height: '1px', display: 'inline-block', width: '100%', backgroundColor: 'black'}}></div>\n        </div>);\n    } \n\n    console.log('props in', this.props.display )\n    \n    return (\n      <React.Fragment>\n      { this.state.display &&\n        <div style={ style.container }>\n          {\n            [{col1: 'caw', col2: 'Replace the current word'},\n            {col1: 'dw', col2: 'Delete current word'},\n            {col1: 'dd', col2: 'Delete whole line'},\n            {col1: 'de', col2: 'Delete to the end of the word'},\n            {col1: 'dE', col2: 'delete to end of the line'},\n            {col1: 'db', col2: 'Delete to the beginning of the word'},\n            {col1: 'cc', col2: 'Copy line'},\n            {col1: 'w', col2: 'Go to the beginning of the next word'},\n            {col1: 'E', col2: 'Go to the end of the previous word'},\n            {col1: 'e', col2: 'Go to the end of the current word'},\n            {col1: 'P', col2: 'Refresh the page'},\n            {col1: 'arrowup', col2: 'Go up DOESENT WORK'},\n            {col1: 'arrowdown', col2: 'Scroll down'},\n            {col1: 'k', col2: 'Go up one line'},\n            {col1: 'j', col2: 'Go down one line'},\n            {col1: 'h', col2: 'Go one character to the left'},\n            {col1: 'l', col2: 'Go one line down'},\n            {col1: 'n', col2: 'Delete to the beginning of the word'},\n            {col1: 'm', col2: 'Delete to the beginning of the word'},\n\n            {col1: 'c', col2: \"isnt a command just let you use multiple character str\"},\n            {col1: 'd', col2: 'same here'},\n            {col1: '9', col2: 'Go to the end of the line'},\n            {col1: 'X', col2: 'Delete the whole line'},\n            {col1: 'p', col2: 'paste line copy'},\n            {col1: 'x', col2: 'Replace current character'},\n            {col1: '0', col2: 'Go to the beginning of the line'},\n            {col1: '>', col2: 'Shift line x pixels to the right'},\n            {col1: '<', col2: 'Shift line x pixels to the left'},\n            {col1: 'O', col2: 'Create a line above the current line'},\n            {col1: 'o', col2: 'Create a line below the current line'},\n\n            {col1: 't', col2: 'Open the tag window'},\n            {col1: 'Enter', col2: 'Create a new line below the current line'},\n            {col1: 'Ëš', col2: 'Shift line upwards'},\n            {col1: 'ArrowDown+alt', col2: 'Shift the current line with the line below'},\n            {col1: 'ArrowUp+alt', col2: 'Shift the current line one line upwards'},\n            ].map( (obj)=> cols(obj))}\n            <div \n            style={style.close}\n            onClick={ ()=>{ \n              // const display = false; this.setState({display}); \n              this.props.onClose();\n            }}\n            >Close</div>\n        </div>\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nconst style = {\n  close: {\n    display: 'block',\n    cursor: 'pointer',\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 17,\n  },\n\n  leftColumn: {\n    display: 'inline-block',\n    width: 100,\n    border: 'none',\n    textAlign: 'center',\n    color: 'black',\n    borderLeft: '1px solid silver',\n    backgroundColor: 'white',\n    opacity: 1,\n    wordWrap: 'wrap',\n    overflow: 'hidden',\n  },\n\n  rightColumn: {\n    display: 'inline-block',\n    width: 200,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 15,\n    paddingLeft: 20,\n  },\n\n  container: {\n    position: 'absolute',\n    display: 'block',\n    width: 400,\n    height: '80vh',\n    overflowY: 'scroll',\n    backgroundColor: 'white',\n    top: 60, \n    left: 0,\n  }\n}\nexport default Hotkeys;"]},"metadata":{},"sourceType":"module"}