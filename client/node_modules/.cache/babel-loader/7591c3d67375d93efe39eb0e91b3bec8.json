{"ast":null,"code":"import _objectSpread from \"/Users/Kim/Desktop/todolist/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Kim/Desktop/todolist/client/src/components/tags/tags1.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tags1 = ({\n  data\n}) => {\n  let today = null;\n  let prio = null;\n  let task = null;\n  let tags = null;\n\n  if (data && data.tags) {\n    tags = data.tags;\n    today = tags.today.timestamp ? tags.today.timestamp : null;\n    task = tags.task ? tags.task : null;\n  }\n\n  const doneMarker = tags && tags.done && tags.done.timestamp && tags.done.timestamp.length > 0 ? true : false;\n  const color = data.rowStyle && data.rowStyle.color ? data.rowStyle.color : 'black';\n  const borderColor = {\n    border: \"1px solid \" + color\n  };\n  prio = data && data.tags && data.tags.prio && data.tags.prio.str !== 'none' ? true : false; // const newLine = ( (task || today || prio ) || createNewLine(data) ) ? true : false;\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, prio && React.createElement(\"span\", {\n    style: prioStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, data.tags.prio.str), task && doneMarker && React.createElement(\"span\", {\n    style: _objectSpread({}, taskStyle, {}, {\n      backgroundColor: 'green'\n    }, {}, borderColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), task && !doneMarker && React.createElement(\"span\", {\n    style: _objectSpread({}, taskStyle, {}, borderColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), today && React.createElement(\"span\", {\n    style: start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Today\"));\n};\n\nTags1.propTypes = {\n  data: PropTypes.object\n};\nconst start = {\n  backgroundColor: 'orange',\n  color: 'black',\n  marginRight: 5,\n  padding: \"1px 2px\",\n  borderRadius: \"3px\"\n};\nconst prioStyle = {\n  backgroundColor: 'blue',\n  color: 'white',\n  marginRight: 5,\n  padding: \"1px 2px\",\n  borderRadius: \"3px\"\n};\nconst taskStyle = {\n  display: 'inline-block',\n  width: 13,\n  height: 13,\n  border: '1px solid black',\n  position: 'relative',\n  top: 3,\n  marginRight: 5,\n  borderRadius: 3\n};\nexport default Tags1;","map":{"version":3,"sources":["/Users/Kim/Desktop/todolist/client/src/components/tags/tags1.jsx"],"names":["React","PropTypes","Tags1","data","today","prio","task","tags","timestamp","doneMarker","done","length","color","rowStyle","borderColor","border","str","prioStyle","taskStyle","backgroundColor","start","propTypes","object","marginRight","padding","borderRadius","display","width","height","position","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\n\nconst Tags1 = ({data}) => {\n\n  let today = null;\n  let prio = null;\n  let task = null;\n  let tags = null;\n\n  if ( data && data.tags){\n    tags = data.tags;\n    today = tags.today.timestamp ? tags.today.timestamp : null;\n    task = (tags.task) ? tags.task : null;\n  }\n\n  const doneMarker = ( tags && tags.done && tags.done.timestamp && tags.done.timestamp.length > 0) ? true : false;\n  const color = data.rowStyle && data.rowStyle.color ? data.rowStyle.color : 'black';\n  const borderColor = { border: \"1px solid \" + color }\n\n  prio = ( data && data.tags && data.tags.prio && data.tags.prio.str !== 'none') ? true : false;\n  // const newLine = ( (task || today || prio ) || createNewLine(data) ) ? true : false;\n\n  return (\n    <React.Fragment>\n      {/* {newLine && <div></div>} */}\n      { prio  && <span style={prioStyle}>{data.tags.prio.str}</span>}\n      { task && doneMarker && <span style={{ ...taskStyle, ...{backgroundColor: 'green'}, ...borderColor }}></span> }\n      { task && !doneMarker && <span style={{ ...taskStyle, ...borderColor }}></span> }\n      { today && <span style={start}>Today</span>}\n    </React.Fragment>\n  )\n}\n \nTags1.propTypes = {\n  data: PropTypes.object,\n}\n\n\nconst start = { \n  backgroundColor: 'orange',\n  color: 'black',\n  marginRight: 5,\n  padding: \"1px 2px\",\n  borderRadius: \"3px\"\n};\n\nconst prioStyle = { \n  backgroundColor: 'blue',\n  color: 'white',\n  marginRight: 5,\n  padding: \"1px 2px\",\n  borderRadius: \"3px\"\n};\n\nconst taskStyle ={\n  display: 'inline-block',\n  width: 13,\n  height: 13,\n  border: '1px solid black',\n  position: 'relative',\n  top: 3,\n  marginRight: 5,\n  borderRadius: 3,\n};\n\nexport default Tags1;"]},"metadata":{},"sourceType":"module"}