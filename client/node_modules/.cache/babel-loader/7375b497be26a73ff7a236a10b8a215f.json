{"ast":null,"code":"import _objectSpread from \"/Users/Kim/Desktop/todolist5/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// import tag from '../tags/tag';\nexport function endOfNextWord(list, cursor) {\n  cursor.savePos = -1;\n  let text = list[cursor.yPos].text;\n\n  let oldCursor = _objectSpread({}, cursor); //clean up the row from all the unnecessary tags.\n  // text = tag.cleanifyStringFromTags(text);\n  //if at the end of the string.\n\n\n  if (cursor.xPos >= text.length - 1) {\n    //if on the last row.\n    if (cursor.yPos >= list.length - 1) {\n      return cursor;\n    } //increment and check again if it's on the last row if so decrement again.\n\n\n    cursor.yPos += 1;\n\n    if (cursor.yPos >= list.length - 1) {\n      cursor.yPos = list.length - 1;\n    } // text = tag.cleanifyStringFromTags(list[cursor.yPos])\n\n  } //Removes all unnecessary text before the cursor\n  // the +1 is so it doesnt get stuck if it is at the end of a word.\n\n\n  let sub = text.substring(cursor.xPos + 1); // Jump to the end of the next word.\n\n  var regex2 = /[w.!?][s]/; // var regex2 = /[\\w\\.!?][\\s]/;\n\n  let index = sub.search(regex2) + 1;\n  cursor.xPos = index + text.substring(0, cursor.xPos).length; // if the cursor doesn't jump any further go the last character of the row\n\n  if (oldCursor.xPos >= cursor.xPos && oldCursor.yPos === cursor.yPos) {\n    cursor.xPos = text.length - 1;\n    return cursor;\n  }\n\n  return cursor;\n}\nexport default {\n  endOfNextWord\n};","map":{"version":3,"sources":["/Users/Kim/Desktop/todolist5/client/src/components/todo/cursor/endOfNextWord.js"],"names":["endOfNextWord","list","cursor","savePos","text","yPos","oldCursor","xPos","length","sub","substring","regex2","index","search"],"mappings":";AAAA;AAEA,OAAO,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAoC;AACzCA,EAAAA,MAAM,CAACC,OAAP,GAAiB,CAAC,CAAlB;AADyC,MAEpCC,IAFoC,GAE5BH,IAAI,CAACC,MAAM,CAACG,IAAR,CAFwB,CAEpCD,IAFoC;;AAGzC,MAAIE,SAAS,qBAAOJ,MAAP,CAAb,CAHyC,CAKzC;AACA;AAEA;;;AACA,MAAIA,MAAM,CAACK,IAAP,IAAeH,IAAI,CAACI,MAAL,GAAc,CAAjC,EAAmC;AAEjC;AACA,QAAIN,MAAM,CAACG,IAAP,IAAeJ,IAAI,CAACO,MAAL,GAAc,CAAjC,EAAmC;AACjC,aAAON,MAAP;AAAgB,KAJe,CAMjC;;;AACAA,IAAAA,MAAM,CAACG,IAAP,IAAe,CAAf;;AACA,QAAIH,MAAM,CAACG,IAAP,IAAeJ,IAAI,CAACO,MAAL,GAAc,CAAjC,EAAmC;AACjCN,MAAAA,MAAM,CAACG,IAAP,GAAcJ,IAAI,CAACO,MAAL,GAAc,CAA5B;AACD,KAVgC,CAWjC;;AACD,GArBwC,CAuBzC;AACA;;;AACA,MAAIC,GAAG,GAAGL,IAAI,CAACM,SAAL,CAAgBR,MAAM,CAACK,IAAP,GAAc,CAA9B,CAAV,CAzByC,CA2BzC;;AACA,MAAII,MAAM,GAAG,WAAb,CA5ByC,CA6BzC;;AACA,MAAIC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAYF,MAAZ,IAAuB,CAAnC;AACAT,EAAAA,MAAM,CAACK,IAAP,GAAcK,KAAK,GAAGR,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBR,MAAM,CAACK,IAAzB,EAAgCC,MAAtD,CA/ByC,CAiCzC;;AACA,MAAIF,SAAS,CAACC,IAAV,IAAkBL,MAAM,CAACK,IAAzB,IAAiCD,SAAS,CAACD,IAAV,KAAmBH,MAAM,CAACG,IAA/D,EAAqE;AACnEH,IAAAA,MAAM,CAACK,IAAP,GAAcH,IAAI,CAACI,MAAL,GAAc,CAA5B;AACA,WAAON,MAAP;AACD;;AAED,SAAOA,MAAP;AACD;AAID,eAAe;AACbF,EAAAA;AADa,CAAf","sourcesContent":["// import tag from '../tags/tag';\n\nexport function endOfNextWord(list, cursor){\n  cursor.savePos = -1;\n  let {text} = list[cursor.yPos];\n  let oldCursor = {...cursor};\n  \n  //clean up the row from all the unnecessary tags.\n  // text = tag.cleanifyStringFromTags(text);\n\n  //if at the end of the string.\n  if( cursor.xPos >= text.length - 1){\n\n    //if on the last row.\n    if( cursor.yPos >= list.length - 1){\n      return cursor; }\n\n    //increment and check again if it's on the last row if so decrement again.\n    cursor.yPos += 1;\n    if( cursor.yPos >= list.length - 1){\n      cursor.yPos = list.length - 1;\n    }\n    // text = tag.cleanifyStringFromTags(list[cursor.yPos])\n  }\n\n  //Removes all unnecessary text before the cursor\n  // the +1 is so it doesnt get stuck if it is at the end of a word.\n  let sub = text.substring( cursor.xPos + 1 );\n\n  // Jump to the end of the next word.\n  var regex2 = /[w.!?][s]/;\n  // var regex2 = /[\\w\\.!?][\\s]/;\n  let index = sub.search( regex2 ) + 1;\n  cursor.xPos = index + text.substring(0, cursor.xPos ).length\n\n  // if the cursor doesn't jump any further go the last character of the row\n  if( oldCursor.xPos >= cursor.xPos && oldCursor.yPos === cursor.yPos ){\n    cursor.xPos = text.length - 1;\n    return cursor;\n  }\n\n  return cursor\n}\n\n\n\nexport default {\n  endOfNextWord,\n}"]},"metadata":{},"sourceType":"module"}